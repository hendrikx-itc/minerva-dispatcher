#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
Minerva Dispatcher command line script.

Dispatcher/harvest job sources look like this:

{
    "uri": "/data",
    "recursive": true,
    "match_pattern": ".*",
    "job_config": {}
}

"""
import os
import argparse
import logging.handlers

from minerva_dispatcher.version import __version__ as version
from minerva_dispatcher import JobCollector, get_job_sources

package_name = "minerva_dispatcher"
script_name = os.path.basename(__file__)
config_file = "{}.conf".format(script_name)


def main():
    """Script entry point."""
    parser = argparse.ArgumentParser(
        description="watch job sources for new files/jobs")

    parser.add_argument(
        "--version", action="version", version='%(prog)s {}'.format(version),
        help="display version information and exit")

    job_sources = get_job_sources()
    job_collector = JobCollector(job_sources)
    job_collector.start()

    logging.info("started with pid {0:d}".format(os.getpid()))

    try:
        job_collector.run()
    except Exception as e:
        logging.warning("error in loop: {}".format(e))
    else:
        logging.warning("loop ended")
    finally:
        job_collector.stop()
        logging.info("collector stopped")

if __name__ == "__main__":
    main()
