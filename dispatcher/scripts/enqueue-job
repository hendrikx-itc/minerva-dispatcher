#!/usr/bin/env python
# -*- coding: utf-8 -*-
import os
import argparse
from contextlib import closing

from configobj import ConfigObj

from minerva.db import connect, extract_safe_url, OperationalError
from minerva.system.jobqueue import enqueue_job
from minerva.system.helpers import PREPARED_STATEMENTS


def main():
    parser = argparse.ArgumentParser(
        description='Place a file in the job queue'
    )

    parser.add_argument(
        "-d", "--data-source", help="data source of file", default="enqueue_job"
    )

    parser.add_argument(
        'file', metavar='FILE', type=str, nargs='+', help='file to enqueue'
    )

    args = parser.parse_args()

    config = ConfigObj(args.configfile)

    with closing(connect(config["db_url"])) as conn:
        with closing(conn.cursor()) as cursor:
            for stmt in PREPARED_STATEMENTS:
                cursor.execute("PREPARE {}".format(stmt))

            query = "SELECT id FROM directory.data_source WHERE name = %s"
            query_args = (args.datasource, )
            cursor.execute(query, query_args)

            if cursor.rowcount == 0:
                print("No such data source '{}'".format(args.datasource))
                return 1

            data_source_id, = cursor.fetchone()

        for path in args.file:
            file_size = os.path.getsize(path)

            enqueue_job(conn, data_source_id, path, file_size)


if __name__ == "__main__":
    main()